openapi: 3.0.0
info:
  title: API de Usuarios
  version: 1.0.0
servers:
- url: /
paths:
#-----------------------inicio de los endpoints para users-------------------------------------------
  /users:
    post:
      operationId: registerUser
      security: [ ]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Usuario registrado exitosamente
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Datos de entrada inválidos
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Correo ya registrado
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error interno del servidor
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Servicio no disponible
      summary: Registrar un nuevo usuario
      x-content-type: application/json
      x-accepts:
        - application/json
  /users/{id}/password:
    patch:
      operationId: updateUserPassword
      parameters:
        - explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuccessResponse'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordUpdate'
          description: Contraseña actualizada exitosamente
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Datos de entrada inválidos
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: No autorizado
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Prohibido (sin permisos suficientes)
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Usuario no encontrado
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error interno del servidor
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Servicio no disponible
      security:
        - BearerAuth: [ ]
      summary: Actualizar la contraseña de un usuario
      x-content-type: application/json
      x-accepts:
        - application/json
  /users/{id}:
    delete:
      operationId: deleteUser
      parameters:
        - explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutAfterDeleteUsers'
          description: usuario eliminado correctamente
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: usuario no autorizado
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Prohibido (sin permisos suficientes)
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Usuario no encontrado
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error interno en el servidor
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Servicio no disponible
      summary: Eliminar Usuario
      x-accepts:
        - application/json
    get:
      operationId: getUser
      parameters:
        - explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Usuario encontrado
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: usuario no autorizado
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Prohibido (sin permisos suficientes)
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Usuario no encontrado
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error interno en el servidor
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Servicio no disponible
      summary: Busqueda del Usuario Especificado
      x-accepts:
        - application/json
    put:
      operationId: updateUser
      parameters:
        - explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPUT'
        description: Datos del usuario a actualizar
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: usuario actualizado correctamente
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: usuario no autorizado
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Prohibido (sin permisos suficientes)
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Usuario no encontrado
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error interno en el servidor
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Servicio no disponible
      summary: Actualizar usuario
      x-content-type: application/json
      x-accepts:
        - application/json
  /users/list:
    get:
      operationId: busquedaUsers
      parameters:
        - description: numero de pagina buscado y presentado
          explode: true
          in: query
          name: page
          required: false
          schema:
            default: 1
            type: integer
          style: form
        - description: tamaño de datos por pagina
          explode: true
          in: query
          name: size
          required: false
          schema:
            default: 10
            type: integer
          style: form
        - description: usuario BUSCADO
          explode: true
          in: query
          name: searchUser
          required: false
          schema:
            type: string
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponsePagenatedUsers'
          description: busqueda realizada con exito
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: usuario no autorizado
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Prohibido (sin permisos suficientes)
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error interno en el servidor
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Servicio no disponible
          summary: Busqueda de USUARIOS usando paginacion
          x-content-type:
          x-accepts:
            - application/json
#--------------------- fin de los endpoints para users---------------------------------------------
  #-------------------Inicio de los endpoints para reportes--------------------------------------
  /v1/reports:
    post:
      operationId: registerReport
      description: create a new report
      tags:
        - reports
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/reportRequest' # para la creacion del reporte
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportResponse'
          description: report register without problems
        "400":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ErrorResponse'
                type: array
          description: Data of entrance are invalid
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: email itś already registered
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Intern Error of server
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: the service are not available
        x-content-type: application/json
        x-accepts:
          - application/json
  /v1/reports/{id}:
    get:
      summary: obtain a report using your id
      description: retorn the information of specific report
      tags:
        - reports
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: reporte encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportResponse'
        "404":
          description: reporte no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: error interno en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: elimina un reporte por id
      description: delete a report using your id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: reporte eliminado con exito
        "404":
          description: reporte no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      summary: actualiza un rfeporte de forma parcial
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuccessResponse'
      responses:
        "200":
          description: reporte acctializado correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reportResponse'
        "400":
          description: la solicitud es incorrecta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: el reporte no se ha encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: ha ocurrido un error del servidor
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/ErrorResponse'

#------------------------------ fin de los endpoints para reportes---------------------------------
#-------------------------------inicio de los endpoints para comentarios--------------------
  /v1/reports/{reporteId}/comentarios:
    post:
      summary: creacion de un nuevo comentario en un reporte
      parameters:
        - name: reporteId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComentariosRequest'
      responses:
        "201":
          description: comentario creado con exito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComentarioResponse'
        "400":
          description: solicitud incorrecta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: comentario no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "501":
          description: error en el servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      summary: obtain a list of comments that are a report

      responses:

#-------------------------------fin de los endpoints para comentarios
components:
  schemas:
    UserRegistration:
      example:
        password: password
        fullName: fullName
        dateBirth: 1990-01-01
        email: email
        rol: user
      properties:
        email:
          format: email
          type: string
        password:
          description: "La contraseña del usuario (debe contener al menos un dígito,\
            \ una mayúscula y una minúscula)"
          minLength: 8
          pattern: "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*$"
          type: string
        fullName:
          maxLength: 100
          type: string
        dateBirth:
          example: 1990-01-01
          format: date
          type: string
        rol:
          default: user
          enum:
          - user
          - admin
          type: string
      required:
      - email
      - fullName
      - password
      type: object
    PasswordUpdate:
      example:
        newPassword: newPassword
        currentPassword: currentPassword
      properties:
        currentPassword:
          description: Contraseña actual del usuario
          type: string
        newPassword:
          description: "Nueva contraseña del usuario (debe contener al menos un dí\
            gito, una mayúscula y una minúscula)"
          minLength: 8
          pattern: "^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).*$"
          type: string
      required:
      - currentPassword
      - newPassword
      type: object
    SuccessResponse:
      description: marcar accion realizada exitosamente
      example:
        message: Contraseña actualizada exitosamente
      properties:
        message:
          example: Contraseña actualizada exitosamente
          type: string
      required:
      - message
      type: object
    UserResponse:
      example:
        fullName: fullName
        id: id
        dateBirth: 2000-01-23
        email: email
        rol: rol
      properties:
        id:
          type: string
        email:
          type: string
        fullName:
          type: string
        dateBirth:
          format: date
          type: string
        rol:
          type: string
      required:
      - email
      - fullName
      - id
      - rol
      type: object
    ErrorResponse:
      example:
        error: error
        message: message
      properties:
        error:
          type: string
        message:
          type: string
      required:
      - error
      - message
      type: object
    OutAfterDeleteUsers:
      example:
        message: El usuario se ha eliminado con exito
      properties:
        message:
          example: El usuario se ha eliminado con exito
          type: string
      type: object
    UpdateUserPUT:
      example:
        datebirth: 2000-01-23
        fullname: fullname
      properties:
        fullname:
          maxLength: 80
          type: string
        datebirth:
          format: date
          type: string
      required:
      - datebirth
      - fullname
      type: object
    ResponsePagenatedUsers:
      example:
        totalUsers: 5
        size: 0
        totalPages: 1
        page: 6
        users:
        - fullName: fullName
          id: id
          dateBirth: 2000-01-23
          email: email
          rol: rol
        - fullName: fullName
          id: id
          dateBirth: 2000-01-23
          email: email
          rol: rol
      properties:
        size:
          description: cantidad de datos mostrados actuales
          type: integer
        page:
          description: numero de pagina mostrado actualmente
          type: integer
        totalPages:
          description: cantidad de paginas totales
          type: integer
        totalUsers:
          description: numero total de usuarios existentes
          type: integer
        users:
          description: usuarios totales en el sistema
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
      type: object
    reportRequest:
      type: object
      required:
        -title
        -category
        -location
      properties:
        title:
          type: string
          example: fire in the school
        category:
          type: string
          enum:
            -SEGURIDAD
            -EMERGENCIAS_MEDICAS
            -INFRAESTRUCTURA
            -SOBRE_COMUNIDAD
            -MASCOTAS
        location:
          $ref: '#/components/schemas/Location'
        image:
          type: string
          format: binary
          example: image.jpg
    Location:
      type: object
      properties:
        latitud:
          type: number
          format: double
          example: 48.987
        longitud:
          type: number
          format: double
          example: -78.007
    reportResponse:
      allOf: #definimos un arreglo de requisitos a cumplir para validar el reporte
        - $ref : '#/components/schemas/reportRequest'
        - type: object
          properties:
            id:
              type: string
              example: rep123
            dateCreation:
              type: string
              format: date-time
              example: "2025-03-14T12:00:00Z"


  #----------------TERMINATE OF DEFINITION OF THIS SCHEME
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT